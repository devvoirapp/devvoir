// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  login         String?   // GitHub username
  lemonSqueezyCustomerId String?   @unique
  trialEndsAt   DateTime? @default("2099-12-31T23:59:59Z")
  accounts      Account[]
  sessions      Session[]
  reports       Report[]  // Relation to reports
  settings      UserSettings?

  @@map("users")
}

model Report {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  prNumber    Int
  summary     String   @db.Text
  userId      String
  user        User     @relation(fields: [userId], references: [id])

  @@map("reports")
}

model UserSettings {
  id                    String    @id @default(cuid())
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                String    @unique
  reportCount           Int       @default(0)
  lastReportDate        DateTime?
  monthlyReportCount    Int       @default(0)
  monthlyResetDate      DateTime? @db.Date()
  monthlyReportLimit    Int       @default(20)
  totalAvailableReports Int      @default(20)
  additionalReportsPurchased     Int       @default(0)     // Total number of additional reports purchased
  usedPurchasedReports  Int       @default(0)     // Number of purchased reports that have been used
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("user_settings")
}
